

@inject IJSRuntime JsRuntime

<nav>

    <ul class="nav-links">
        <li><div class="col-md-1 ">
            <div  class="btn-toolbar">File</div>
        </div></li>
        <li><div  class="col-md-1 ">
            <div   class="btn-toolbar">Edit</div>
        </div></li>
        <li><div class="col-md-1">
            <div  class="btn-toolbar">View</div>
        </div></li>
        <li><div class="col-md-1">
            <div  class="btn-toolbar">Insert</div>
        </div></li>
        <li><div class="col-md-1">
            <div  class="btn-toolbar">Cell</div>
        </div></li>
        <li><div class="col-md-1">
            <div  class="btn-toolbar">Core</div>
        </div></li>
        <li><div class="col-md-1">
            <div id="Help" class="btn-toolbar">Help</div>
        </div></li>


    </ul>
    <div class="burger" @onclick="SideBar">
        <div class="line1"></div>
        <div class="line2"></div>
        <div class="line3"></div>
    </div>
    <ul class=" nav navbar-nav">
    <li id="run" >
        <div > <div  class="col">
        <svg  width="30" height="30" fill="Black" class="bi bi-play" viewBox="0 0 15 15">
            <path d="M10.804 8L5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z"></path>
        </svg>
        </div></div>
    </li>
    </ul>


</nav>

@code
{

    
    private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module ??= JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/isolated/EditorToolbar.razor.js").AsTask();
    async Task SideBar()
    {
        var module = await Module;
        await module.InvokeVoidAsync("navSlide");
    }
    
    
    public async ValueTask DisposeAsync()
    {
        if (_module != null)
        {
            await (await _module).DisposeAsync();
        }
    }


}

