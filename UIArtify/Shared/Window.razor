@inject IJSRuntime JsRuntime

<div @onclick="DraggableWindow" id="@StyleId">
    <div class="row row-no-padding no-gutters ">
        <div class="my-div-header col-9">Artifier</div>
        <div class="col-3 bg-black d-flex">

            <div class="line justify-content-center align-self-center"></div>

        </div>
    </div>
    <div class="container">
        @ChildContent
    </div>
</div>


@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public String StyleId { get; set; }

    [Parameter]
    public String ParentId { get; set; }

    private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module ??= JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/isolated/DraggableWindow.js").AsTask();

    async Task DraggableWindow()
    {
        var module = await Module;
        await module.InvokeVoidAsync("dragElement", ParentId, StyleId);
    }


    public async ValueTask DisposeAsync()
    {
        if (_module != null)
        {
            await (await _module).DisposeAsync();
        }
    }

}