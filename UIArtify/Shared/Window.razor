@inject IJSRuntime JsRuntime

<div class="window-holder">
    <div class="row row-no-padding no-gutters ">

        <div class="col my-div-header">@TabName</div>
        <div class="col bg-black d-flex button button-hide">
            <div class="line-holder justify-content-center align-self-center">
                <div class="line"></div>
            </div>
        </div>

        
    </div>
    <div class="container content-wrapper">
        @ChildContent
    </div>
    <div class="window-footer row row-no-padding no-gutters"></div>
</div>


@code {

    

    [Parameter]
    public String TabName { get; set; } = " ";

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public String StyleId { get; set; }

    [Parameter]
    public String ParentId { get; set; }

    private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module ??= JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/isolated/DraggableWindow.js").AsTask();

    


    public async ValueTask DisposeAsync()
    {
        if (_module != null)
        {
            await (await _module).DisposeAsync();
        }
    }

}