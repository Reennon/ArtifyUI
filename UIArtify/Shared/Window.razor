@inject IJSRuntime JsRuntime

<div @onclick="DrugWindow" id="@StyleId">
    <div class="row ">
        <div id="mydivheader" class="col">Artifier</div>
        <div id="collapse" class="col ">
            <div class="line"></div>
        </div>
    </div>
    <div class="container">
        @ChildContent
    </div>
</div>


@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public String StyleId { get; set; }

    [Parameter]
    public String ParentId { get; set; }

    private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module ??= JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/isolated/DraggableWindow.js").AsTask();

    async Task DrugWindow()
    {
        var module = await Module;
        await module.InvokeVoidAsync("dragElement", ParentId, StyleId);
    }


    public async ValueTask DisposeAsync()
    {
        if (_module != null)
        {
            await (await _module).DisposeAsync();
        }
    }

}