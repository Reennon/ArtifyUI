
@inject IJSRuntime JsRuntime

<div @onclick="DrugWindow" id="@StyleId">
  <div class="row ">
    <div id="mydivheader" class="col">Artifyer</div>
    <div id="collapse" class="col ">
      <div class="line"></div>
    </div>
  </div>
  <ul class="container">
    <li class="folder">
      <div class="arrow-right"></div>
        FolderFolderFolder
    </li>
      <li class="folder">Folder 2Folder 2Folder 2Folder 2</li>
      <li class="folder">Folder 3</li>
      <li class="folder">Folder 4</li>
      <li class="folder">Folder 5</li>
  </ul>
</div>



  


@code {
  [Parameter]
  public String StyleId { get; set; }
  [Parameter]
  public String ParentId { get; set; }  
  private Task<IJSObjectReference> _module;
  private Task<IJSObjectReference> Module => _module ??= JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/isolated/DraggableWindow.js").AsTask();
  
  async Task DrugWindow()
  {
    
    var module = await Module;
    await module.InvokeVoidAsync("dragElement",ParentId,StyleId);
  }
    
    
  public async ValueTask DisposeAsync()
  {
    if (_module != null)
    {
      await (await _module).DisposeAsync();
    }
  }

}